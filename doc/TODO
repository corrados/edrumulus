


- use rim switch theshold in dB (not linear as it is implemented right now)

- for the ESP32 prototype, adjust the ADC_noise_peak_velocity_scaling in edrumulus.h correctly

- Documentation: Edrumulus manual which describes the hardware/software setup, parameter description, HOWTOs, etc.

- fix rim shot detection issue with low volume strikes -> Maybe issue is caused by ADC noise?

- possible memory issue on the ESP32, see 406c31fd66aeb1609f75e22672d5fa9280749f37

- simulate 16 bit with current hardware and check if thresholds are correct

- Should we consider pre-scan time high peaks for velocity estimation?

- Hot spot suppression on mesh pads with center piezo
  -> striking directly on the piezo results in detected velocity values which are much too high

- Signal overload correction
  -> maybe based on low-pass filtering as suggested in https://github.com/corrados/edrumulus/discussions/17#discussion-3736264

- support positional sensing for rim shots

- Documentation: Algorithm description
  -> improve retrigger cancellation section

- fix ghost strikes: probably caused by electrical interferers or noise in the microcontroller developer
  board itself -> either find a software solution or changes in the analog front end are needed

- Improve dynamics for Drumgizmo (for official drum kits as well as self-recorded kit)
  MIDI file 1:10:127 -> reference -> record audio -> DGEdit -> check the estimated powers

- Attach second piezo on mesh pad and experiment with improved velocity/position detection using the second piezo signal

- Improve Edrumulus/Drumgizmo usage on Raspberry Pi (Pi 3+ and Pi Zero)

- Create Qt application for controlling Edrumulus via MIDI using the rtmidi library

- Create PCB for Prototype2 based on ESP32

- support hardware keyboard/display like Arduino LCD1602 Display Keypad Shield



